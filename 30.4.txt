CREATE TABLE BOOKS_AUD (
                           EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                           EVENT_DATE DATETIME NOT NULL,
                           EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                           BOOK_ID INT(11) NOT NULL,
                           TITLE VARCHAR(255),
                           PUBYEAR INT (4),
                           OLD_BESTSELLER BOOLEAN,
                           NEW_BESTSELLER BOOLEAN,
                           PRIMARY KEY (EVENT_ID)
);


DELIMITER $$

CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, TITLE, PUBYEAR, NEW_BESTSELLER)
        VALUE(CURTIME(), 'INSERT', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR,
              NEW.BESTSELLER);
END $$

DELIMITER ;

INSERT INTO BOOKS(TITLE, PUBYEAR)
VALUES ('Test', 2023);

COMMIT;



DELIMITER $$

CREATE TRIGGER BOOKS_DELETE AFTER DELETE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID)
        VALUE(CURTIME(), 'DELETE', OLD.BOOK_ID);
END $$

DELIMITER ;

DELETE FROM BOOKS WHERE BOOK_ID = 7;

COMMIT;



DELIMITER $$

CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, TITLE, PUBYEAR, NEW_BESTSELLER, OLD_BESTSELLER)
        VALUE(CURTIME(), 'UPDATE', OLD.BOOK_ID, OLD.TITLE, OLD.PUBYEAR,, NEW.BESTSELLER, OLD.BESTSELLER);
END $$

DELIMITER ;

UPDATE BOOKS SET BESTSELLER = TRUE
WHERE BOOK_ID = 8;

COMMIT;


CREATE TABLE READERS_AUD (
                             EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                             EVENT_DATE DATETIME NOT NULL,
                             EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                             READER_ID INT(11) NOT NULL,
                             FIRSTNAME VARCHAR(255),
                             OLD_LASTNAME VARCHAR(255),
                             NEW_LASTNAME VARCHAR(255),
                             PESELID VARCHAR (11),
                             OLD_VIP_LEVEL VARCHAR(20),
                             NEW_VIP_LEVEL VARCHAR(20),
                             PRIMARY KEY (EVENT_ID)
);


DELIMITER $$

CREATE TRIGGER READERS_INSERT AFTER INSERT ON READERS                                       
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, FIRSTNAME, NEW_LASTNAME, PESELID, NEW_VIP_LEVEL)                               
        VALUE(CURTIME(), 'INSERT', NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);                                                            
END $$

DELIMITER ;

INSERT INTO READERS(FIRSTNAME, LASTNAME, PESELID, VIP_LEVEL)
VALUES ('Test', 'TEST', '123456789', 'STANDARD CUSTOMER');

COMMIT;



DELIMITER $$

CREATE TRIGGER READERS_DELETE AFTER DELETE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
        VALUE(CURTIME(), 'DELETE', OLD.READER_ID);
END $$

DELIMITER ;

DELETE FROM READERS WHERE READER_ID = 9;


DELIMITER $$

CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, FIRSTNAME, NEW_LASTNAME,
                             PESELID, NEW_VIP_LEVEL, OLD_LASTNAME, OLD_VIP_LEVEL)
        VALUE(CURTIME(), 'UPDATE', OLD.READER_ID, OLD.FIRSTNAME, NEW.LASTNAME,
              OLD.PESELID, NEW.VIP_LEVEL, OLD.LASTNAME, OLD.VIP_LEVEL);
END $$

DELIMITER ;

UPDATE READERS SET VIP_LEVEL = 'SILVER CUSTOMER'
WHERE READER_ID = 1;

COMMIT;